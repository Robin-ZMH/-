class Solution:
    def solveNQueens(self, n: int) -> List[List[str]]:
        res = []
        board = ['.' * n for _ in range(n)]
        def process(board, row):
            if row == n:
                res.append(board[:])
                return 
            for col in range(n):
                if(isValid(board, row, col)):
                    board[row] = board[row][: col] + 'Q' + board[row][col+1: ]
                    process(board, row+1)
                    board[row] = board[row].replace('Q', '.')
        
        def isValid(board, row, col):
            for i in range(row):
                if board[i][col] == 'Q':
                    return False
            tmp_row, tmp_col = row-1, col-1
            while tmp_row >= 0 and tmp_col >= 0:
                if board[tmp_row][tmp_col] == 'Q':
                    return False  
                tmp_row -= 1
                tmp_col -= 1
            tmp_row, tmp_col = row-1, col+1
            while tmp_row >= 0 and tmp_col < n:
                if board[tmp_row][tmp_col] == 'Q':
                    return False
                tmp_row -= 1
                tmp_col += 1
            return True
        process(board, 0)
        return res
