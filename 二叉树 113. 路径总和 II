# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def pathSum(self, root: Optional[TreeNode], targetSum: int) -> List[List[int]]:
        def process(node, targetSum, path):
            if node == None:
                return
            path.append(node.val)
            if node.left == None and node.right == None:
                if targetSum == node.val:
                    res.append(path[:])
                return
            if node.left:
                process(node.left, targetSum - node.val, path)
                path.pop()
            if node.right:
                process(node.right, targetSum - node.val, path)
                path.pop()
    
        res = []
        process(root, targetSum, [])
        return res
