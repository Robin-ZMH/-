# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def deleteNode(self, root: Optional[TreeNode], key: int) -> Optional[TreeNode]:
        if root == None: return None
        if root.val == key:
            if root.left == None and root.right == None:
                del root
                return None
            elif root.left and root.right == None:
                temp = root
                root = root.left
                del temp
                return root
            elif root.left == None and root.right:
                temp = root
                root = root.right
                del temp
                return root
            else:
                node = root.left
                while node and node.right:
                    node = node.right
                node.right = root.right
                temp = root
                root = root.left
                del temp
                return root
        if key < root.val: root.left = self.deleteNode(root.left, key)
        if key > root.val: root.right = self.deleteNode(root.right, key)
        return root
