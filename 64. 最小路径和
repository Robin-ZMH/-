class Solution:
    def minPathSum(self, A: List[List[int]]) -> int:
        m, n = len(A), len(A[0])
        dp = [[0 for _ in range(n+1)] for _ in range(m+1)]

        dp[m-1][n-1] = A[m-1][n-1]

        for i in reversed(range(m)):
            for j in reversed(range(n)):
                if i == m-1 and j == n-1:
                    continue
                if i == m-1:
                    dp[i][j] = dp[i][j+1] + A[i][j]
                    continue
                if j == n-1:
                    dp[i][j] = dp[i+1][j] + A[i][j]
                    continue
                dp[i][j] = min(dp[i+1][j], dp[i][j+1]) + A[i][j]

        return dp[0][0]
